// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheHealtood.Data;

#nullable disable

namespace TheHealtood.Migrations
{
    [DbContext(typeof(TheHealtoodContext))]
    partial class TheHealtoodContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("TheHealtood.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("TheHealtood.Models.Gallery", b =>
                {
                    b.Property<int>("GalleryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<byte[]>("Datos")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GalleryId");

                    b.ToTable("Gallery");
                });

            modelBuilder.Entity("TheHealtood.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FoodGroups")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("TheHealtood.Models.ProductWithIngredients", b =>
                {
                    b.Property<int>("IngredientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IngredientId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductWithIngredients");
                });

            modelBuilder.Entity("TheHealtood.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CartId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GalleryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("GalleryId")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TheHealtood.Models.ProductWithIngredients", b =>
                {
                    b.HasOne("TheHealtood.Models.Ingredient", "Ingredient")
                        .WithMany("ProductWithIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheHealtood.Models.Products", "Products")
                        .WithMany("ProductWithIngredients")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TheHealtood.Models.Products", b =>
                {
                    b.HasOne("TheHealtood.Models.Cart", "Cart")
                        .WithMany("ListProd")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TheHealtood.Models.Gallery", "gallery")
                        .WithOne("Product")
                        .HasForeignKey("TheHealtood.Models.Products", "GalleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("gallery");
                });

            modelBuilder.Entity("TheHealtood.Models.Cart", b =>
                {
                    b.Navigation("ListProd");
                });

            modelBuilder.Entity("TheHealtood.Models.Gallery", b =>
                {
                    b.Navigation("Product")
                        .IsRequired();
                });

            modelBuilder.Entity("TheHealtood.Models.Ingredient", b =>
                {
                    b.Navigation("ProductWithIngredients");
                });

            modelBuilder.Entity("TheHealtood.Models.Products", b =>
                {
                    b.Navigation("ProductWithIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
